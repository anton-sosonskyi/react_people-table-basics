{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","pages/HomePage.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","useParams","map","motherName","fatherName","born","died","mother","father","PeoplePage","useState","setPeople","isLoading","setIsLoading","isInitialized","setIsInitialized","isError","setIsError","loadPeople","serverResp","onlyWithParents","find","m","f","useEffect","isNoPeopleOnServer","length","NotFoundPage","HomePage","Navbar","role","isActive","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.555b2276.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={person.slug}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => {\n            const {\n              sex,\n              motherName,\n              fatherName,\n              born,\n              died,\n              mother,\n              father,\n            } = person;\n\n            return (\n              <tr\n                key={person.slug}\n                data-cy=\"person\"\n                className={classNames({\n                  'has-background-warning': person.slug === slug,\n                })}\n              >\n                <td>\n                  <PersonLink person={person} />\n                </td>\n\n                <td>{sex}</td>\n                <td>{born}</td>\n                <td>{died}</td>\n                <td>\n                  {mother\n                    ? <PersonLink person={mother} />\n                    : motherName || '-'}\n                </td>\n                <td>\n                  {father\n                    ? <PersonLink person={father} />\n                    : fatherName || '-'}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n    setIsInitialized(false);\n    setIsError(false);\n    try {\n      const serverResp = await getPeople();\n      const onlyWithParents = serverResp.map((person) => {\n        const mother = serverResp.find(m => m.name === person.motherName);\n        const father = serverResp.find(f => f.name === person.fatherName);\n\n        return (\n          {\n            ...person,\n            mother,\n            father,\n          }\n        );\n      });\n\n      setPeople(onlyWithParents);\n      setIsInitialized(true);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const isNoPeopleOnServer = isInitialized && !people.length;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <PeopleTable people={people} />\n          )}\n\n          {isNoPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => classNames(\n            'navbar-item',\n            {\n              'has-background-grey-lighter': isActive,\n            },\n          )}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"people\"\n          className={({ isActive }) => classNames(\n            'navbar-item',\n            {\n              'has-background-grey-lighter': isActive,\n            },\n          )}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { HomePage } from './pages/HomePage';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\" element={<PeoplePage />}>\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}